/* eslint-disable no-unused-vars */
/* eslint-disable no-trailing-spaces */
// This file is auto-generated by generate_types so do not edit manually

import { TMeta } from '../partials/Meta';
import { TUri } from '../simpleTypes/Uri';
import { TNarrative } from '../partials/Narrative';
import { TResourceContainer } from '../simpleTypes/ResourceContainer';
import { TExtension } from '../partials/Extension';
import { TIdentifier } from '../partials/Identifier';
import { TCodeableConcept } from '../partials/CodeableConcept';
import { TReference } from '../partials/Reference';
import { TPeriod } from '../partials/Period';
import { TCoverageClass } from '../partials/CoverageClass';
import { TInt } from '../simpleTypes/Int';
import { TCoverageCostToBeneficiary } from '../partials/CoverageCostToBeneficiary';

export type TCoverage = {
  resourceType?: string;
  id?: string;
  meta?: TMeta;
  implicitRules?: TUri;
  language?: string;
  text?: TNarrative;
  contained?: TResourceContainer[];
  extension?: TExtension[];
  modifierExtension?: TExtension[];
  identifier?: TIdentifier[];
  status: string;
  type?: TCodeableConcept;
  policyHolder?: TReference;
  subscriber?: TReference;
  subscriberId?: string;
  beneficiary: TReference;
  dependent?: string;
  relationship?: TCodeableConcept;
  period?: TPeriod;
  payor: TReference[];
  class_?: TCoverageClass[];
  order?: TInt;
  network?: string;
  costToBeneficiary?: TCoverageCostToBeneficiary[];
  subrogation?: boolean;
  contract?: TReference[];
};
